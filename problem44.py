'''
Created on Feb 20, 2014

https://projecteuler.net/problem=44

Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:

1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not pentagonal.

Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal and D = |Pk − Pj| is minimised; what is the value of D?

@author: Cawb07
'''
from operator import itemgetter
from math import sqrt
from time import time

# Quad form: 0 = 3n^2 - n - 2Pn
def pentagonal(n):
	return n*((3*n)-1)/2

def quadratic(a,b,c):
	try:
		plus = ((-b)+sqrt(b*b-4*a*c))/(2*a)
	except ValueError:
		plus = 'neg'
	try:
		minus = ((-b)-sqrt(b*b-4*a*c))/(2*a)
	except ValueError:
		minus = 'neg'
	return (plus, minus)

start = time()

pents = []
for i in range(1, 10000):
	pents.append(pentagonal(i))

diffs = []
for i in range(len(pents)):
	for j in  range(i+1, len(pents)):
		diff = pents[j]-pents[i]
		sigma = pents[j]+pents[i]
		meow = quadratic( 3, -1, -2*diff )
		ruff = quadratic( 3, -1, -2*sigma)
		for k in meow:
			if type(k) != str and k%1 == 0 and k != 0.0 and k > 0:
				for l in ruff:
					if type(l) != str and l%1 == 0 and l != 0.0 and l > 0:
						diffs.append((diff,(pents[j], pents[i]), k))

print(sorted(diffs, key=itemgetter(0), reverse=True), "\n", len(diffs))

'''
meow = quadratic(3, -1, -2*35)
for i in meow:
	if i%1 == 0:
		print(i)
'''
elapsed = time() - start
print( "The elapsed time is {0} seconds.".format(elapsed) )
